unit uCategoria;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.ExtCtrls,
  FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Error, FireDAC.UI.Intf,
  FireDAC.Phys.Intf, FireDAC.Stan.Def, FireDAC.Stan.Pool, FireDAC.Stan.Async,
  FireDAC.Phys, FireDAC.Phys.MySQL, FireDAC.Phys.MySQLDef, FireDAC.VCLUI.Wait,
  FireDAC.DatS, FireDAC.DApt.Intf, FireDAC.DApt, FireDAC.Comp.Client, Data.DB,
  FireDAC.Stan.Param, FireDAC.Comp.DataSet, Vcl.Imaging.jpeg, IdBaseComponent,
  IdComponent, IdIOHandler, IdIOHandlerSocket, IdIOHandlerStack, IdSSL,
  IdSSLOpenSSL, IdTCPConnection, IdTCPClient, IdExplicitTLSClientServerBase,
  IdFTP, IdHTTP, System.JSON;

type
  TFCategoria = class(TForm)
    edtzone: TEdit;
    edtczone: TEdit;
    edtname: TEdit;
    edttipo: TEdit;
    edtename: TEdit;
    edtletter: TEdit;
    edtlink: TEdit;
    edtimagemnavegacao: TEdit;
    edtimagemcateg: TEdit;
    edtsort_order: TEdit;
    edtdisplay: TEdit;
    edtbannercategoria: TEdit;
    edtlinkexterno: TEdit;
    edttarget: TEdit;
    edtidpai: TEdit;
    edtbannernavegacao: TEdit;
    edtmostrartopo: TEdit;
    edtseo_cat_key: TEdit;
    edtseo_cat_descricao: TEdit;
    edtseo_cat_title: TEdit;
    edtenviarfoto: TEdit;
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    Label5: TLabel;
    Label6: TLabel;
    Label7: TLabel;
    Label8: TLabel;
    Label9: TLabel;
    Label10: TLabel;
    Label11: TLabel;
    Label12: TLabel;
    Label13: TLabel;
    Label14: TLabel;
    Label15: TLabel;
    Label16: TLabel;
    Label17: TLabel;
    Label18: TLabel;
    Label19: TLabel;
    Label20: TLabel;
    Label21: TLabel;
    edtorigemfoto: TEdit;
    Label22: TLabel;
    Button1: TButton;
    Button2: TButton;
    Image1: TImage;
    Button3: TButton;
    Button4: TButton;
    Button5: TButton;
    FDConn: TFDConnection;
    FDQuery: TFDQuery;
    AbreFoto: TOpenDialog;
    Button6: TButton;
    Shape_Conectado: TShape;
    Memo1: TMemo;
    IdSSLIOHandlerSocketOpenSSL1: TIdSSLIOHandlerSocketOpenSSL;
    IdFTP1: TIdFTP;
    edtdirdest: TEdit;
    Label23: TLabel;
    edtiderp: TEdit;
    Label24: TLabel;
    edtserver: TEdit;
    Label25: TLabel;
    Button7: TButton;
    edtbasebdlocal: TEdit;
    Label26: TLabel;
    FDPhysMySQLDriverLink: TFDPhysMySQLDriverLink;
    procedure Button5Click(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure Button3Click(Sender: TObject);
    procedure Button4Click(Sender: TObject);
    procedure Button6Click(Sender: TObject);
    procedure Button7Click(Sender: TObject);
    procedure FDConnBeforeConnect(Sender: TObject);
  private
    procedure clearMemory;
    procedure desmontaNomeArquivo(nomeArquivo:string; out nome:string; extensao:string);
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FCategoria: TFCategoria;


implementation

{$R *.dfm}

procedure TFCategoria.Button1Click(Sender: TObject);
begin
  try
    FDConn.Connected := true;
  except on e:exception do

    showmessage(e.Message);


  end;

  FDQuery.close;
  FDQuery.sql.Clear;
  FDQuery.sql.add('insert into category(zone,            czone,       name,              tipo,            ename,         	letter,      link,        imagemnavegacao,    ');
  FDQuery.sql.add('                     imagemcateg,     sort_order,  display,           bannercategoria, linkexterno,    target,      idpai,       bannernavegacao,    ');
  FDQuery.sql.add('                     mostrartopo,     seo_cat_key, seo_cat_descricao, seo_cat_title,   enviarfoto,     origemfoto,  dirdest,     iderp  )  ');

  FDQuery.sql.add('            values  (:zone,            :czone,       :name,              :tipo,            :ename,         	:letter,      :link,        :imagemnavegacao,      ');
  FDQuery.sql.add('                     :imagemcateg,     :sort_order,  :display,           :bannercategoria, :linkexterno,     :target,      :idpai,       :bannernavegacao,      ');
  FDQuery.sql.add('                     :mostrartopo,     :seo_cat_key, :seo_cat_descricao, :seo_cat_title,   :enviarfoto,      :origemfoto,  :dirdest,     :iderp)');

  FDQuery.Params.ParamByName('zone').AsString :=   edtzone.text;
	FDQuery.Params.ParamByName('czone').AsString :=	 edtczone.Text;
	FDQuery.Params.ParamByName('name').AsString :=	 edtname.Text;
	FDQuery.Params.ParamByName('tipo').AsString :=	 edttipo.Text;
	FDQuery.Params.ParamByName('ename').AsString :=	 edtename.Text;
	FDQuery.Params.ParamByName('letter').AsString :=	 edtletter.Text;
	FDQuery.Params.ParamByName('link').AsString :=	 edtlink.Text;
	FDQuery.Params.ParamByName('imagemnavegacao').AsString :=	 edtimagemnavegacao.Text;
	FDQuery.Params.ParamByName('imagemcateg').AsString :=	 edtimagemcateg.Text;
	FDQuery.Params.ParamByName('sort_order').AsString :=	 edtsort_order.Text;
	FDQuery.Params.ParamByName('display').AsString :=	 edtdisplay.Text;
	FDQuery.Params.ParamByName('bannercategoria').AsString :=	 edtbannercategoria.Text;
	FDQuery.Params.ParamByName('linkexterno').AsString :=	 edtlinkexterno.text;
	FDQuery.Params.ParamByName('target').AsString :=	 edttarget.text;

	FDQuery.Params.ParamByName('idpai').AsString :=	 edtidpai.Text;
	FDQuery.Params.ParamByName('bannernavegacao').AsString :=	 edtbannernavegacao.Text;
	FDQuery.Params.ParamByName('mostrartopo').AsString :=	 edtmostrartopo.Text;
	FDQuery.Params.ParamByName('seo_cat_key').AsString :=	 edtseo_cat_key.Text;
	FDQuery.Params.ParamByName('seo_cat_descricao').AsString :=	 edtseo_cat_descricao.Text;
	FDQuery.Params.ParamByName('seo_cat_title').AsString :=	 edtseo_cat_title.Text;
  FDQuery.Params.ParamByName('enviarfoto').AsString :=   edtenviarfoto.Text;
  FDQuery.Params.ParamByName('origemfoto').AsString :=   edtorigemfoto.Text;
  FDQuery.Params.ParamByName('dirdest').AsString :=   edtdirdest.Text;
  FDQuery.Params.ParamByName('iderp').AsString :=   edtiderp.Text;

  FDquery.ExecSQL;


  FDConn.Connected := false;
  showmessage('Registro inserido com sucesso!');

end;

procedure TFCategoria.Button3Click(Sender: TObject);
var
  Hora, Min, Sec,MSec:Word;

  NomeArquivo, Auxiliar:string;


  contador:integer;
begin

 //Erro ao carregar JPEG
 //https://www.askingbox.com/question/delphi-loading-jpeg-image-in-timage-does-not-work-exception-einvalidgraphic-unknown-picture-file-extension-jpg


  //Foto
  //http://www.planetadelphi.com.br/dica/6779/incluir-foto

  AbreFoto.DefaultExt := '*.jpg;*.jpeg;*.psd;*.tga*.png;*.gif;*.bmp';
  AbreFoto.Filter := 'Arquivos de Imagem|*.jpg;*.jpeg;*.psd;*.tga;*.png;*.gif;*.bmp';

  if AbreFoto.Execute then
  begin

     Image1.Picture.LoadFromFile( AbreFoto.FileName  );
     //edtimagemcateg.Text := 'categoria\/'+formatdatetime('yyyy',date)+'\/'+formatdatetime('mm',date)+formatdatetime('dd',date)  +'\/'+inttostr(Hora)+inttostr(Min)+inttostr(Sec)+inttostr(MSec)+'.jpg';


     NomeArquivo := AbreFoto.FileName;


     //Extrai nome do arquivo
     NomeArquivo := AnsiStrRScan(PCHar(NomeArquivo), '\');
     for contador := 2 To StrLen(PCHar(NomeArquivo)) do
         Auxiliar := Auxiliar + NomeArquivo [contador];


     edtimagemcateg.Text := 'categoria/construtor/'+Auxiliar;
     edtdirdest.Text := 'categoria/construtor/';

     edtorigemfoto.Text :=  AbreFoto.FileName;
     edtenviarfoto.Text := 'Y';


  end;
end;

procedure TFCategoria.Button4Click(Sender: TObject);
begin
   edtenviarfoto.Text := 'N';
   edtorigemfoto.Text := '';
   edtimagemcateg.Text := '';
   edtdirdest.Text := '';
   image1.Picture := nil;
end;

procedure TFCategoria.Button5Click(Sender: TObject);
var
  Hora, Min, Sec,MSec:Word;
begin

    //Como extrair Dia, mês e ano
    // http://www.planetadelphi.com.br/dica/7289/-extrair-dia,mes,ano-de-uma-data-especifica-


    //Como extrair Hora
    //http://www.planetadelphi.com.br/dica/1094/rotina-para-retornar-a-hora,-minutos,-segundos-e-milisegundos.

    //Verificar
    //https://www.devmedia.com.br/forum/verificar-se-diretorio-existe/444004


    //verifica se firebird está instalado
    //https://pt.scribd.com/doc/187611861/Como-testar-se-o-firebird-esta-instalado-no-inno-setup-doc

     DecodeTime(Now, Hora, Min, Sec, MSec);

     edtzone.text := '';
		 edtczone.Text := '';
		 //edtname.Text := 'Informática';
		 edttipo.Text := '';
		 edtename.Text:= '';
		 edtletter.Text := '';
		 edtlink.Text := '';
		 edtimagemnavegacao.Text := 'Y';
		 //edtimagemcateg.Text := 'categoria\/'+formatdatetime('yyyy',date)+'\/'+formatdatetime('mm',date)+formatdatetime('dd',date)  +'\/'+inttostr(Hora)+inttostr(Min)+inttostr(Sec)+inttostr(MSec)+'.jpg';
		 edtsort_order.Text :=  '0';
		 edtdisplay.Text := 'Y';
		 //edtbannercategoria.Text := '<p><a title=\"Notebooks\" href=\"departamento\/notebooks\/140\"><img title=\"Informática\" src=\"..\/..\/..\/uploads\/images\/informatica.png\" alt=\"Banner Informática\" width=\"1094\" height=\"263\" \/><\/a><\/p>';
		 edtlinkexterno.text := '';
		 edttarget.text :=  '';
		 edtidpai.Text := '0';
		 //edtbannernavegacao.Text := '<p><a title=\"Notebooks\" href=\"departamento\/acessórios\/131\"><img title=\"Informática\" src=\"..\/..\/..\/uploads\/images\/bm_0107_info_notebook-acer_2.png\" alt=\"Categoria Informática\" width=\"333\" height=\"333\" \/><\/a><\/p>';
		 edtmostrartopo.Text := 'Y';
		 edtseo_cat_key.Text := '';
		 edtseo_cat_descricao.Text := '';
		 edtseo_cat_title.Text := '';
     edtenviarfoto.Text := 'N';
     edtorigemfoto.Text := '';
     edtdirdest.text := '';
     edtiderp.Text := '0';

     Image1.Picture := nil;

end;

procedure TFCategoria.Button6Click(Sender: TObject);
var
      LHandler:TIdSSLIOHandlerSocketOpenSSL;
      IIdSSLMode:Integer;

      m : TStream;
      f : TStream;
      t : Cardinal;
      Nome_Arquivo,
      Auxiliar :String;
      contador : Integer;


begin

  FDQuery.close;
  FDQuery.sql.Clear;
  FDQuery.sql.add('select * from category');
  FDQuery.Open;

  while not FDQuery.Eof do
  begin


     //IdOpenSSLSetLibPath(extractfilepath(paramstr(0)));



     if FDQuery.FieldByName('enviarfoto').asString  = 'Y' then
     begin



          try
            idFTP1.Connect;
          finally

          if idFTP1.Connected = True Then
             Shape_Conectado.Brush.Color := clLime;

          Memo1.Lines.Add('Conectado ao endereço: ' + idFTP1.Host);
          Memo1.Lines.Add('Servidor remoto: ' + idFTP1.SystemDesc);
          Memo1.Lines.Add('');




          //try
          //  FileList:= TStrings.Create();
          //  idFTP1.List(FileList,'',true);
          //  Memo1.Lines.Add(FileList.Count.ToString);
          //finally
          //  FileList.DisposeOf;
          //end;


          //try
           // idFTP1.ChangeDir('/novalouzada.com.br/web/media/categoria/2022/0104/');

          //except
            //idFTP1.ChangeDir(FDQuery.FieldByName('dirdest').asString);

          //end;



          Auxiliar := '';
          f := nil;
          m := nil;

          Memo1.Lines.Add('Diretório original: ' + FDQuery.FieldByName('origemfoto').asString);

          Nome_Arquivo :=  FDQuery.FieldByName('origemfoto').asString;


          Memo1.Lines.Add ('Operação: troca de diretório local');
          Memo1.Lines.Add ('Diretório do arquivo: ' + GetCurrentDir);
          Memo1.Lines.Add ('');

          Nome_Arquivo := AnsiStrRScan(PCHar(Nome_Arquivo), '\');
          for contador := 2 To StrLen(PCHar(Nome_Arquivo)) do
              Auxiliar := Auxiliar + Nome_Arquivo [contador];

          Nome_Arquivo := FDQuery.FieldByName('dirdest').asString+Auxiliar;


          try
            Memo1.Lines.Add('Operação: Upload');
            Memo1.Lines.Add ('Arquivo local: ' + FDQuery.FieldByName('origemfoto').asString);
            Memo1.Lines.Add ('Gravado como: ' + Nome_Arquivo);

            f := TFileStream.Create(FDQuery.FieldByName('origemfoto').asString,fmOpenRead);
            m := TMemoryStream.Create;
            m.CopyFrom(f,f.Size);
            m.Seek(0,0) ;
            t := GetTickCount;


            idFTP1.Put(m,Nome_Arquivo);

            Memo1.Lines.Add(Format('tempo %d milesegundos',[GetTickCount - t]));
            Memo1.Lines.Add(Format('Tamanho %d bytes',[m.Size]));
            Memo1.Lines.Add('');

          finally
            m.Free;
            f.Free;
          end;


          SetCurrentDir (FDQuery.FieldByName('dirdest').asString);
          Memo1.Lines.Add('Operação: troca de diretorio local');
          Memo1.Lines.Add ('Diretório após a operação: ' + GetCurrentDir);
          Memo1.Lines.Add ('');

          try
          idFTP1.Disconnect;
          finally
          if idFTP1.Connected = False then
          Shape_Conectado.Brush.Color := clGray;
          end;


          end;


     end;


     FDQuery.Next;

  end;







end;




procedure TFCategoria.Button7Click(Sender: TObject);
var

    HTTP: TIdHTTP;
    vJsonAEnviar: TStringStream;
    sresponse:string;

    jSonObject:  TJSonObject;
    jSonArray: TJSonArray;
    id:string;

    Nome_Arquivo, Auxiliar:string;

    contador:integer;

    imagemsemfoto:String;


begin

  imagemsemfoto :=  extractfilepath(application.ExeName)+'\images\semfoto.jpg';

  if not fileexists(imagemsemfoto) then
     imagemsemfoto := '';


  FDConn.Connected := false;


  FDConn.Params.add('server='+edtbasebdlocal.Text);

  FDConn.Connected := true;


  //Categoria

  FDQuery.close;
  FDQuery.sql.Clear;
  FDQuery.sql.add('select * from category');
  FDQuery.Open;

  JSonArray := TJSonArray.Create;


  try

     memo1.lines.add('Preparando envio...');

      while not FDQuery.Eof do
      begin

        Auxiliar := '';

        Nome_Arquivo :=  FDQuery.fieldbyname('origemfoto').AsString;

        Nome_Arquivo := AnsiStrRScan(PCHar(Nome_Arquivo), '\');
        for contador := 2 To StrLen(PCHar(Nome_Arquivo)) do
            Auxiliar := Auxiliar + Nome_Arquivo [contador];

        Nome_Arquivo := FDQuery.FieldByName('caminhocurto').asString+Auxiliar;


        JSonObject := TJSonObject.Create;
        JSonObject.AddPair('id',FDQuery.fieldbyname('id').AsString);

        //if (FDQuery.fieldbyname('idpai').AsInteger  > 0 ) and (FDQuery.fieldbyname('zone').AsString <> '') then
        //   JSonObject.AddPair('zone','group')
        //else
        JSonObject.AddPair('zone',FDQuery.fieldbyname('zone').AsString);

        JSonObject.AddPair('czone',FDQuery.fieldbyname('czone').AsString);
        JSonObject.AddPair('name',FDQuery.fieldbyname('name').AsString);
        JSonObject.AddPair('tipo',FDQuery.fieldbyname('tipo').AsString);
        JSonObject.AddPair('ename',FDQuery.fieldbyname('ename').AsString);
        JSonObject.AddPair('letter',FDQuery.fieldbyname('letter').AsString);
        JSonObject.AddPair('link',FDQuery.fieldbyname('link').AsString);
        JSonObject.AddPair('imagemnavegacao',FDQuery.fieldbyname('imagemnavegacao').AsString);

        if FDQuery.fieldbyname('enviarfoto').AsString  = 'Y' then
           JSonObject.AddPair('imagemcateg', Nome_Arquivo)                                  //FDQuery.fieldbyname('imagemcateg').AsString);
        else if FDQuery.fieldbyname('enviarfoto').AsString  = 'E' then
           JSonObject.AddPair('imagemcateg', imagemsemfoto );

        //else
        //   JSonObject.AddPair('imagemcateg', nil);

        JSonObject.AddPair('sort_order',FDQuery.fieldbyname('sort_order').AsString);
        JSonObject.AddPair('display',FDQuery.fieldbyname('display').AsString);
        JSonObject.AddPair('bannercategoria',FDQuery.fieldbyname('bannercategoria').AsString);
        JSonObject.AddPair('linkexterno',FDQuery.fieldbyname('linkexterno').AsString);
        JSonObject.AddPair('target',FDQuery.fieldbyname('target').AsString);
        JSonObject.AddPair('idpai',FDQuery.fieldbyname('idpai').AsString);
        JSonObject.AddPair('bannernavegacao',FDQuery.fieldbyname('bannernavegacao').AsString);
        JSonObject.AddPair('mostrartopo',FDQuery.fieldbyname('mostrartopo').AsString);
        JSonObject.AddPair('seo_cat_key',FDQuery.fieldbyname('seo_cat_key').AsString);
        JSonObject.AddPair('seo_cat_descricao',FDQuery.fieldbyname('seo_cat_descricao').AsString);
        JSonObject.AddPair('seo_cat_title',FDQuery.fieldbyname('seo_cat_title').AsString);
        JSonObject.AddPair('iderp',FDQuery.fieldbyname('iderp').AsString);
        JSonArray.AddElement(jSonObject);



        FDQuery.Next;
      end;


     memo1.lines.add(JSonArray.ToString);
     memo1.lines.add('Enviando lote categorias...');


     try


       HTTP:= TIdHTTP.Create;
       HTTP.Request.UserAgent := 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:12.0) Gecko/20100101 Firefox/12.0';
       HTTP.Request.ContentType := 'application/json';

       vJsonAEnviar := TStringStream.Create(UTF8Encode(JSonArray.ToString));
       sresponse :=  HTTP.Post('http://'+edtserver.Text+':9000/category/insert/several', vJsonAEnviar);


     except on e:exception do
     begin

        memo1.lines.add('Erro ao enviar dados...'+e.Message);



     end;





     end;



     memo1.lines.add(sresponse);



  finally


     memo1.lines.add('Finalizando envio de lote de categoria...');

     JSonArray.DisposeOf;
     vJsonAEnviar.DisposeOf;
     HTTP.DisposeOf;
  end;




end;

procedure TFCategoria.clearMemory;
var
   MainHandle : THandle;
begin
   try
      MainHandle := OpenProcess(PROCESS_ALL_ACCESS, false, GetCurrentProcessID) ;
      SetProcessWorkingSetSize(MainHandle, $FFFFFFFF, $FFFFFFFF) ;
      CloseHandle(MainHandle) ;
   except
   end;
     Application.ProcessMessages;
end;



procedure TFCategoria.desmontaNomeArquivo(nomeArquivo: string; out nome: string;
  extensao: string);
var pos:integer;
begin

  pos := System.Pos('.',nomeArquivo);

  if pos > 0 then
  begin
    nome := copy(nomeArquivo,1,pos-1);
    extensao := copy(nomeArquivo,pos+1,length(nomeArquivo));
  end;

end;

procedure TFCategoria.FDConnBeforeConnect(Sender: TObject);
begin
  //FDPhysMySQLDriverLink.VendorLib := System.SysUtils.GetCurrentDir+'\libmysql.dll';
  FDPhysMySQLDriverLink.VendorLib := extractfilepath(application.ExeName)+'\libmysql.dll'

end;

procedure TFCategoria.FormCreate(Sender: TObject);
begin
     edtzone.text := '';
		 edtczone.Text := '';
		 edtname.Text := '';
		 edttipo.Text := '';
		 edtename.Text:= '';
		 edtletter.Text := '';
		 edtlink.Text := '';
		 edtimagemnavegacao.Text := '';
		 edtimagemcateg.Text := '';
		 edtsort_order.Text :=  '0';
		 edtdisplay.Text := 'Y';
		 edtbannercategoria.Text := '';
		 edtlinkexterno.text := '';
		 edttarget.text :=  '';
		 edtidpai.Text := '0';
		 edtbannernavegacao.Text := '';
		 edtmostrartopo.Text := 'Y';
		 edtseo_cat_key.Text := '';
		 edtseo_cat_descricao.Text := '';
		 edtseo_cat_title.Text := '';
     edtenviarfoto.Text := 'N';
     edtorigemfoto.Text := '';
     edtdirdest.Text := '';
     edtiderp.Text := '0';


end;

end.
